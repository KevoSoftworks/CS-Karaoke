package com.kevosoftworks.rpifpgaiface;

import java.util.HashMap;
import java.util.Map.Entry;

public class Song {
	
	public static final String DEFAULT = "lala.wav";
	
	String name;
	SPIInterface spi;
	
	HashMap<Long, byte[]> original;
	HashMap<Long, Integer> originZeroCross;
	HashMap<Long, byte[]> record;
	HashMap<Long, Integer> recordZeroCross;
	
	public Song(SPIInterface spi){
		this(spi, DEFAULT);
	}
	
	public Song(SPIInterface spi, String name){
		this.spi = spi;
		this.name = name;
		this.original = new HashMap<Long, byte[]>();
		this.originZeroCross = new HashMap<Long, Integer>();
		this.record = new HashMap<Long, byte[]>();
		this.recordZeroCross = new HashMap<Long, Integer>();
		
		
	}
	
	public void convertOriginal(){
		
	}
	
	public void sendOriginal() throws Exception{
		for(Entry<Long, byte[]> e: record.entrySet()){
			Packet p = new Packet(e.getValue(), false, false, e.getKey());
			spi.readByte(p.getPacket());
			p = new Packet(new byte[]{0, 0, 0, 0}, false, true, 0);
			byte[] result = spi.readByte(p.getPacket());
			
			int cross = this.byteArrToZeroCross(result);
			this.originZeroCross.put(e.getKey(), cross);
		}
	}
	
	public int byteArrToZeroCross(byte[] in){
		return (in[0] << 8) + in[1];
	}

}
